2018-02-05 17:24:27.564 [restartedMain] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@72c7eff: startup date [Mon Feb 05 17:24:27 CST 2018]; root of context hierarchy
2018-02-05 17:24:28.303 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.6.Final
2018-02-05 17:24:29.011 [restartedMain] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-02-05 17:24:29.076 [restartedMain] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9116a537] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-02-05 17:24:31.800 [restartedMain] INFO  org.springframework.cloud.commons.util.InetUtils [InetUtils.java:171] - Cannot determine local hostname
2018-02-05 17:24:32.137 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
2018-02-05 17:24:32.372 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:347] - Initializing Eureka in region us-east-1
2018-02-05 17:24:33.616 [restartedMain] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-02-05 17:24:33.617 [restartedMain] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-02-05 17:24:33.839 [restartedMain] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-02-05 17:24:33.840 [restartedMain] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-02-05 17:24:34.534 [restartedMain] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-02-05 17:24:35.088 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:929] - Disable delta property : false
2018-02-05 17:24:35.088 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:930] - Single vip registry refresh property : null
2018-02-05 17:24:35.089 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:931] - Force full registry fetch : false
2018-02-05 17:24:35.090 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:932] - Application is null : false
2018-02-05 17:24:35.090 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:933] - Registered Applications size is zero : true
2018-02-05 17:24:35.091 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:935] - Application version is -1: true
2018-02-05 17:24:35.091 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - Getting all instance registry info from the eureka server
2018-02-05 17:24:35.365 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1027] - The response status is 200
2018-02-05 17:24:35.367 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1300] - Not registering with Eureka server per configuration
2018-02-05 17:24:35.371 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:434] - Discovery Client initialized at timestamp 1517822675371 with initial instances count: 1
2018-02-05 17:24:37.574 [restartedMain] INFO  org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [ConfigServicePropertySourceLocator.java:82] - Fetching config from server at: http://192.168.221.1:2005/
2018-02-05 17:24:40.509 [restartedMain] INFO  org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [ConfigServicePropertySourceLocator.java:96] - Located environment: name=blog, profiles=[dev], label=master, version=ec35a2a04249fdb9aa5a5b950a51937e6ba7ea03, state=null
2018-02-05 17:24:40.512 [restartedMain] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}]]
2018-02-05 17:24:40.959 [restartedMain] INFO  com.google.blog.BlogApplication [SpringApplication.java:597] - The following profiles are active: dev
2018-02-05 17:24:41.045 [restartedMain] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b1944d0: startup date [Mon Feb 05 17:24:41 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@72c7eff
2018-02-05 17:24:44.917 [restartedMain] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:287] - BeanFactory id=57cc633d-ff99-3601-bb90-73d8cf7be590
2018-02-05 17:24:44.960 [restartedMain] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-02-05 17:24:45.359 [restartedMain] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$7761e86c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-02-05 17:24:46.081 [restartedMain] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-02-05 17:24:46.082 [restartedMain] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9116a537] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-02-05 17:24:46.154 [restartedMain] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b48e7b00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-02-05 17:24:46.261 [restartedMain] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$5ce04e59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-02-05 17:24:46.361 [restartedMain] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$$EnhancerBySpringCGLIB$$218f6db9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-02-05 17:24:48.571 [restartedMain] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [TomcatEmbeddedServletContainer.java:89] - Tomcat initialized with port(s): 5002 (http)
2018-02-05 17:24:48.646 [restartedMain] INFO  org.apache.catalina.core.StandardService [DirectJDKLog.java:180] - Starting service [Tomcat]
2018-02-05 17:24:48.652 [restartedMain] INFO  org.apache.catalina.core.StandardEngine [DirectJDKLog.java:180] - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-02-05 17:24:49.371 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [DirectJDKLog.java:180] - Initializing Spring embedded WebApplicationContext
2018-02-05 17:24:49.373 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 8328 ms
2018-02-05 17:24:50.873 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-02-05 17:24:50.874 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'traceFilter' to: [/*]
2018-02-05 17:24:50.874 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-02-05 17:24:50.875 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-02-05 17:24:50.876 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2018-02-05 17:24:50.876 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2018-02-05 17:24:52.189 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
2018-02-05 17:24:52.190 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-02-05 17:24:52.207 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
2018-02-05 17:24:52.211 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-02-05 17:24:53.786 [restartedMain] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b1944d0: startup date [Mon Feb 05 17:24:41 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@72c7eff
2018-02-05 17:24:54.507 [restartedMain] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/]}" onto public java.lang.String com.google.blog.style.controller.HomeController.index()
2018-02-05 17:24:54.513 [restartedMain] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-02-05 17:24:54.514 [restartedMain] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-02-05 17:24:54.965 [restartedMain] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-02-05 17:24:54.966 [restartedMain] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-02-05 17:24:55.356 [restartedMain] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-02-05 17:24:58.348 [restartedMain] INFO  org.springframework.cloud.commons.util.InetUtils [InetUtils.java:171] - Cannot determine local hostname
2018-02-05 17:24:59.594 [restartedMain] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-02-05 17:25:01.387 [restartedMain] INFO  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [OptionalLiveReloadServer.java:58] - LiveReload server is running on port 35729
2018-02-05 17:25:03.608 [restartedMain] INFO  org.springframework.cloud.commons.util.InetUtils [InetUtils.java:171] - Cannot determine local hostname
2018-02-05 17:25:04.108 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:861] - Shutting down DiscoveryClient ...
2018-02-05 17:25:04.152 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:882] - Completed shut down of DiscoveryClient
2018-02-05 17:25:04.669 [restartedMain] INFO  org.springframework.aop.framework.CglibAopProxy [CglibAopProxy.java:274] - Method [com.netflix.client.config.IClientConfig org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.getClientConfig(feign.Request$Options,java.lang.String)] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2018-02-05 17:25:05.260 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler [ExecutorConfigurationSupport.java:165] - Initializing ExecutorService 
2018-02-05 17:25:05.416 [restartedMain] WARN  org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration [EurekaStarterDeprecationWarningAutoConfiguration.java:19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2018-02-05 17:25:05.651 [restartedMain] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2018-02-05 17:25:05.704 [restartedMain] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-02-05 17:25:05.708 [restartedMain] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-02-05 17:25:05.711 [restartedMain] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-02-05 17:25:05.718 [restartedMain] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-02-05 17:25:05.758 [restartedMain] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-02-05 17:25:05.803 [restartedMain] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=b1944d0,type=ConfigurationPropertiesRebinder]
2018-02-05 17:25:06.166 [restartedMain] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-02-05 17:25:06.200 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
2018-02-05 17:25:06.219 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:347] - Initializing Eureka in region us-east-1
2018-02-05 17:25:06.228 [restartedMain] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-02-05 17:25:06.229 [restartedMain] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-02-05 17:25:06.229 [restartedMain] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-02-05 17:25:06.230 [restartedMain] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-02-05 17:25:06.668 [restartedMain] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-02-05 17:25:06.670 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:929] - Disable delta property : false
2018-02-05 17:25:06.671 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:930] - Single vip registry refresh property : null
2018-02-05 17:25:06.673 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:931] - Force full registry fetch : false
2018-02-05 17:25:06.673 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:932] - Application is null : false
2018-02-05 17:25:06.674 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:933] - Registered Applications size is zero : true
2018-02-05 17:25:06.674 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:935] - Application version is -1: true
2018-02-05 17:25:06.677 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - Getting all instance registry info from the eureka server
2018-02-05 17:25:06.698 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1027] - The response status is 200
2018-02-05 17:25:06.704 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1253] - Starting heartbeat executor: renew interval is: 30
2018-02-05 17:25:06.719 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-02-05 17:25:06.758 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:434] - Discovery Client initialized at timestamp 1517822706758 with initial instances count: 1
2018-02-05 17:25:06.792 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:40] - Registering application blog with eureka with status UP
2018-02-05 17:25:06.794 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1288] - Saw local status change event StatusChangeEvent [timestamp=1517822706794, current=UP, previous=STARTING]
2018-02-05 17:25:06.949 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BLOG/localhost:blog:5002: registering service...
2018-02-05 17:25:07.108 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:813] - DiscoveryClient_BLOG/localhost:blog:5002 - registration status: 204
2018-02-05 17:25:07.153 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:180] - Initializing ProtocolHandler ["http-nio-5002"]
2018-02-05 17:25:07.228 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:180] - Starting ProtocolHandler ["http-nio-5002"]
2018-02-05 17:25:07.341 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool [DirectJDKLog.java:180] - Using a shared selector for servlet write/read
2018-02-05 17:25:07.496 [restartedMain] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [TomcatEmbeddedServletContainer.java:201] - Tomcat started on port(s): 5002 (http)
2018-02-05 17:25:07.497 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [EurekaAutoServiceRegistration.java:124] - Updating port to 5002
2018-02-05 17:25:07.510 [restartedMain] INFO  com.google.blog.BlogApplication [StartupInfoLogger.java:57] - Started BlogApplication in 44.869 seconds (JVM running for 46.886)
2018-02-05 17:28:24.181 [http-nio-5002-exec-10] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [DirectJDKLog.java:180] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-02-05 17:28:24.182 [http-nio-5002-exec-10] INFO  org.springframework.web.servlet.DispatcherServlet [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2018-02-05 17:28:24.391 [http-nio-5002-exec-10] INFO  org.springframework.web.servlet.DispatcherServlet [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 208 ms
2018-02-05 17:28:25.193 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4da61eff}] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@79b893e8: startup date [Mon Feb 05 17:28:25 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b1944d0
2018-02-05 17:28:25.561 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4da61eff}] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-02-05 17:28:26.503 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4da61eff}] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-02-05 17:28:26.540 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4da61eff}] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
2018-02-05 17:28:26.838 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4da61eff}] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-02-05 17:28:26.859 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4da61eff}] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:222] - Using serverListUpdater PollingServerListUpdater
2018-02-05 17:28:26.869 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4da61eff}] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4c38088f
2018-02-05 17:30:06.680 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-02-05 17:34:02.450 [restartedMain] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@54620537: startup date [Mon Feb 05 17:34:02 CST 2018]; root of context hierarchy
2018-02-05 17:34:03.159 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.6.Final
2018-02-05 17:34:03.867 [restartedMain] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-02-05 17:34:03.944 [restartedMain] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e534f690] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-02-05 17:34:07.249 [restartedMain] INFO  org.springframework.cloud.commons.util.InetUtils [InetUtils.java:171] - Cannot determine local hostname
2018-02-05 17:34:07.609 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
2018-02-05 17:34:07.834 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:347] - Initializing Eureka in region us-east-1
2018-02-05 17:34:09.176 [restartedMain] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-02-05 17:34:09.177 [restartedMain] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-02-05 17:34:09.398 [restartedMain] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-02-05 17:34:09.400 [restartedMain] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-02-05 17:34:10.161 [restartedMain] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-02-05 17:34:10.710 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:929] - Disable delta property : false
2018-02-05 17:34:10.711 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:930] - Single vip registry refresh property : null
2018-02-05 17:34:10.711 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:931] - Force full registry fetch : false
2018-02-05 17:34:10.712 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:932] - Application is null : false
2018-02-05 17:34:10.712 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:933] - Registered Applications size is zero : true
2018-02-05 17:34:10.713 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:935] - Application version is -1: true
2018-02-05 17:34:10.713 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - Getting all instance registry info from the eureka server
2018-02-05 17:34:11.004 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1027] - The response status is 200
2018-02-05 17:34:11.009 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1300] - Not registering with Eureka server per configuration
2018-02-05 17:34:11.022 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:434] - Discovery Client initialized at timestamp 1517823251021 with initial instances count: 2
2018-02-05 17:34:13.391 [restartedMain] INFO  org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [ConfigServicePropertySourceLocator.java:82] - Fetching config from server at: http://192.168.221.1:2005/
2018-02-05 17:34:16.206 [restartedMain] INFO  org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [ConfigServicePropertySourceLocator.java:96] - Located environment: name=blog, profiles=[dev], label=master, version=ec35a2a04249fdb9aa5a5b950a51937e6ba7ea03, state=null
2018-02-05 17:34:16.207 [restartedMain] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}]]
2018-02-05 17:34:16.460 [restartedMain] INFO  com.google.blog.BlogApplication [SpringApplication.java:597] - The following profiles are active: dev
2018-02-05 17:34:16.538 [restartedMain] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3f8f7117: startup date [Mon Feb 05 17:34:16 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@54620537
2018-02-05 17:34:20.009 [restartedMain] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:287] - BeanFactory id=57cc633d-ff99-3601-bb90-73d8cf7be590
2018-02-05 17:34:20.048 [restartedMain] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-02-05 17:34:20.408 [restartedMain] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$cb8039c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-02-05 17:34:21.110 [restartedMain] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-02-05 17:34:21.111 [restartedMain] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e534f690] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-02-05 17:34:21.197 [restartedMain] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$8accc59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-02-05 17:34:21.402 [restartedMain] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$b0fe9fb2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-02-05 17:34:21.698 [restartedMain] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$$EnhancerBySpringCGLIB$$75adbf12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-02-05 17:34:24.130 [restartedMain] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [TomcatEmbeddedServletContainer.java:89] - Tomcat initialized with port(s): 5002 (http)
2018-02-05 17:34:24.198 [restartedMain] INFO  org.apache.catalina.core.StandardService [DirectJDKLog.java:180] - Starting service [Tomcat]
2018-02-05 17:34:24.200 [restartedMain] INFO  org.apache.catalina.core.StandardEngine [DirectJDKLog.java:180] - Starting Servlet Engine: Apache Tomcat/8.5.27
2018-02-05 17:34:25.276 [localhost-startStop-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [DirectJDKLog.java:180] - Initializing Spring embedded WebApplicationContext
2018-02-05 17:34:25.277 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader [EmbeddedWebApplicationContext.java:276] - Root WebApplicationContext: initialization completed in 8739 ms
2018-02-05 17:34:27.513 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-02-05 17:34:27.514 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'traceFilter' to: [/*]
2018-02-05 17:34:27.515 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-02-05 17:34:27.515 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-02-05 17:34:27.515 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.FilterRegistrationBean [AbstractFilterRegistrationBean.java:258] - Mapping filter: 'requestContextFilter' to: [/*]
2018-02-05 17:34:27.536 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean [ServletRegistrationBean.java:190] - Mapping servlet: 'dispatcherServlet' to [/]
2018-02-05 17:34:29.553 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
2018-02-05 17:34:29.555 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-02-05 17:34:29.593 [restartedMain] WARN  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
2018-02-05 17:34:29.593 [restartedMain] INFO  com.netflix.config.sources.URLConfigurationSource [URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-02-05 17:34:31.961 [restartedMain] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java:534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3f8f7117: startup date [Mon Feb 05 17:34:16 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@54620537
2018-02-05 17:34:32.630 [restartedMain] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/]}" onto public java.lang.String com.google.blog.style.controller.HomeController.index()
2018-02-05 17:34:32.635 [restartedMain] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-02-05 17:34:32.639 [restartedMain] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java:543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-02-05 17:34:33.110 [restartedMain] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-02-05 17:34:33.111 [restartedMain] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-02-05 17:34:33.498 [restartedMain] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java:362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-02-05 17:34:36.594 [restartedMain] INFO  org.springframework.cloud.commons.util.InetUtils [InetUtils.java:171] - Cannot determine local hostname
2018-02-05 17:34:37.897 [restartedMain] INFO  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java:127] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-02-05 17:34:39.542 [restartedMain] INFO  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [OptionalLiveReloadServer.java:58] - LiveReload server is running on port 35729
2018-02-05 17:34:41.319 [restartedMain] INFO  org.springframework.cloud.commons.util.InetUtils [InetUtils.java:171] - Cannot determine local hostname
2018-02-05 17:34:41.776 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:861] - Shutting down DiscoveryClient ...
2018-02-05 17:34:41.819 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:882] - Completed shut down of DiscoveryClient
2018-02-05 17:34:42.184 [restartedMain] INFO  org.springframework.aop.framework.CglibAopProxy [CglibAopProxy.java:274] - Method [com.netflix.client.config.IClientConfig org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.getClientConfig(feign.Request$Options,java.lang.String)] is package-visible across different ClassLoaders and cannot get proxied via CGLIB: Declare this method as public or protected if you need to support invocations through the proxy.
2018-02-05 17:34:42.798 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler [ExecutorConfigurationSupport.java:165] - Initializing ExecutorService 
2018-02-05 17:34:42.888 [restartedMain] WARN  org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration [EurekaStarterDeprecationWarningAutoConfiguration.java:19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
2018-02-05 17:34:43.157 [restartedMain] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:431] - Registering beans for JMX exposure on startup
2018-02-05 17:34:43.198 [restartedMain] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-02-05 17:34:43.202 [restartedMain] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-02-05 17:34:43.221 [restartedMain] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-02-05 17:34:43.248 [restartedMain] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-02-05 17:34:43.290 [restartedMain] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-02-05 17:34:43.324 [restartedMain] INFO  org.springframework.jmx.export.annotation.AnnotationMBeanExporter [MBeanExporter.java:678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3f8f7117,type=ConfigurationPropertiesRebinder]
2018-02-05 17:34:43.725 [restartedMain] INFO  org.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java:343] - Starting beans in phase 0
2018-02-05 17:34:43.813 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
2018-02-05 17:34:43.844 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:347] - Initializing Eureka in region us-east-1
2018-02-05 17:34:43.872 [restartedMain] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-02-05 17:34:43.873 [restartedMain] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-02-05 17:34:43.873 [restartedMain] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-02-05 17:34:43.873 [restartedMain] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-02-05 17:34:44.220 [restartedMain] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-02-05 17:34:44.222 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:929] - Disable delta property : false
2018-02-05 17:34:44.225 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:930] - Single vip registry refresh property : null
2018-02-05 17:34:44.227 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:931] - Force full registry fetch : false
2018-02-05 17:34:44.227 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:932] - Application is null : false
2018-02-05 17:34:44.228 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:933] - Registered Applications size is zero : true
2018-02-05 17:34:44.228 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:935] - Application version is -1: true
2018-02-05 17:34:44.229 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - Getting all instance registry info from the eureka server
2018-02-05 17:34:44.240 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1027] - The response status is 200
2018-02-05 17:34:44.242 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1253] - Starting heartbeat executor: renew interval is: 30
2018-02-05 17:34:44.303 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator [InstanceInfoReplicator.java:59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-02-05 17:34:44.310 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:434] - Discovery Client initialized at timestamp 1517823284310 with initial instances count: 2
2018-02-05 17:34:44.327 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [EurekaServiceRegistry.java:40] - Registering application blog with eureka with status UP
2018-02-05 17:34:44.328 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1288] - Saw local status change event StatusChangeEvent [timestamp=1517823284328, current=UP, previous=STARTING]
2018-02-05 17:34:44.401 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:804] - DiscoveryClient_BLOG/localhost:blog:5002: registering service...
2018-02-05 17:34:44.494 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:180] - Initializing ProtocolHandler ["http-nio-5002"]
2018-02-05 17:34:44.588 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:813] - DiscoveryClient_BLOG/localhost:blog:5002 - registration status: 204
2018-02-05 17:34:44.613 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol [DirectJDKLog.java:180] - Starting ProtocolHandler ["http-nio-5002"]
2018-02-05 17:34:44.642 [restartedMain] INFO  org.apache.tomcat.util.net.NioSelectorPool [DirectJDKLog.java:180] - Using a shared selector for servlet write/read
2018-02-05 17:34:44.710 [restartedMain] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [TomcatEmbeddedServletContainer.java:201] - Tomcat started on port(s): 5002 (http)
2018-02-05 17:34:44.712 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [EurekaAutoServiceRegistration.java:124] - Updating port to 5002
2018-02-05 17:34:44.738 [restartedMain] INFO  com.google.blog.BlogApplication [StartupInfoLogger.java:57] - Started BlogApplication in 47.233 seconds (JVM running for 49.211)
2018-02-05 17:35:38.059 [http-nio-5002-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [DirectJDKLog.java:180] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-02-05 17:35:38.060 [http-nio-5002-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet [FrameworkServlet.java:489] - FrameworkServlet 'dispatcherServlet': initialization started
2018-02-05 17:35:38.201 [http-nio-5002-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet [FrameworkServlet.java:508] - FrameworkServlet 'dispatcherServlet': initialization completed in 140 ms
2018-02-05 17:35:39.197 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4006a99f}] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6bb22946: startup date [Mon Feb 05 17:35:39 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3f8f7117
2018-02-05 17:35:39.326 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4006a99f}] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-02-05 17:35:39.952 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4006a99f}] INFO  com.netflix.config.ChainedDynamicProperty [ChainedDynamicProperty.java:115] - Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-02-05 17:35:40.009 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4006a99f}] INFO  com.netflix.util.concurrent.ShutdownEnabledTimer [ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
2018-02-05 17:35:40.057 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4006a99f}] INFO  com.netflix.loadbalancer.BaseLoadBalancer [BaseLoadBalancer.java:192] - Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-02-05 17:35:40.068 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4006a99f}] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:222] - Using serverListUpdater PollingServerListUpdater
2018-02-05 17:35:40.074 [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@4006a99f}] INFO  com.netflix.loadbalancer.DynamicServerListLoadBalancer [DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2b6141e
2018-02-05 17:39:44.234 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-02-05 17:44:44.247 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-02-05 17:49:44.248 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-02-05 17:54:44.249 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-02-05 17:59:44.250 [AsyncResolver-bootstrap-executor-0] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
