[ INFO ] [2018-02-09 09:46:51] org.apache.http.impl.client.DefaultHttpClient [695] - I/O exception (org.apache.http.NoHttpResponseException) caught when processing request to {}->http://127.0.0.1:2001: The target server failed to respond
[ INFO ] [2018-02-09 09:46:51] org.apache.http.impl.client.DefaultHttpClient [705] - Retrying request to {}->http://127.0.0.1:2001
[ INFO ] [2018-02-09 09:50:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 09:55:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 10:00:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 10:05:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 10:10:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 10:15:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 10:20:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 10:25:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 10:30:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 10:35:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 10:40:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 10:45:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 10:50:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 10:55:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 11:00:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 11:05:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 11:10:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 11:15:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 11:20:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 11:25:56] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 13:54:31] org.springframework.context.annotation.AnnotationConfigApplicationContext [583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2c35e847: startup date [Fri Feb 09 13:54:31 CST 2018]; root of context hierarchy
[ INFO ] [2018-02-09 13:54:32] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.6.Final
[ INFO ] [2018-02-09 13:54:32] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-09 13:54:32] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5598ebc3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-09 13:54:35] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-09 13:54:35] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [71] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-09 13:54:35] com.netflix.discovery.DiscoveryClient [347] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-09 13:54:36] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-09 13:54:36] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-09 13:54:36] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-09 13:54:36] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-09 13:54:37] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 13:54:37] com.netflix.discovery.DiscoveryClient [929] - Disable delta property : false
[ INFO ] [2018-02-09 13:54:37] com.netflix.discovery.DiscoveryClient [930] - Single vip registry refresh property : null
[ INFO ] [2018-02-09 13:54:37] com.netflix.discovery.DiscoveryClient [931] - Force full registry fetch : false
[ INFO ] [2018-02-09 13:54:37] com.netflix.discovery.DiscoveryClient [932] - Application is null : false
[ INFO ] [2018-02-09 13:54:37] com.netflix.discovery.DiscoveryClient [933] - Registered Applications size is zero : true
[ INFO ] [2018-02-09 13:54:37] com.netflix.discovery.DiscoveryClient [935] - Application version is -1: true
[ INFO ] [2018-02-09 13:54:37] com.netflix.discovery.DiscoveryClient [1018] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-09 13:54:38] com.netflix.discovery.DiscoveryClient [1027] - The response status is 200
[ INFO ] [2018-02-09 13:54:38] com.netflix.discovery.DiscoveryClient [1300] - Not registering with Eureka server per configuration
[ INFO ] [2018-02-09 13:54:38] com.netflix.discovery.DiscoveryClient [434] - Discovery Client initialized at timestamp 1518155678122 with initial instances count: 1
[ INFO ] [2018-02-09 13:54:40] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [82] - Fetching config from server at: http://192.168.221.1:2005/
[ INFO ] [2018-02-09 13:54:46] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [96] - Located environment: name=model, profiles=[dev], label=master, version=7b48f1e22912b972a6c77619878316b65364a7a2, state=null
[ INFO ] [2018-02-09 13:54:46] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [98] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/passliang/ProjectConfig/styleConfig/model-dev.yml'}]]
[ INFO ] [2018-02-09 13:54:46] com.google.style.Application [597] - The following profiles are active: dev
[ INFO ] [2018-02-09 13:54:46] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5ad5be4a: startup date [Fri Feb 09 13:54:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2c35e847
[ INFO ] [2018-02-09 13:54:53] org.springframework.cloud.context.scope.GenericScope [287] - BeanFactory id=855b7dfa-9e2f-3471-81f4-6ba3e1bf1ce1
[ INFO ] [2018-02-09 13:54:53] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-09 13:54:53] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$3be42ef8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-09 13:54:54] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-09 13:54:54] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$6bab8f07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-09 13:54:54] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5598ebc3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-09 13:54:54] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$7910c18c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-09 13:54:54] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$216294e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-09 13:54:54] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$$EnhancerBySpringCGLIB$$e611b445] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-09 13:54:56] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 9090 (http)
[ INFO ] [2018-02-09 13:54:56] org.apache.catalina.core.StandardService [179] - Starting service [Tomcat]
[ INFO ] [2018-02-09 13:54:56] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.23
[ INFO ] [2018-02-09 13:54:56] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2018-02-09 13:54:56] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 10047 ms
[ INFO ] [2018-02-09 13:54:58] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2018-02-09 13:54:58] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-09 13:54:58] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'traceFilter' to: [/*]
[ INFO ] [2018-02-09 13:54:58] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-09 13:54:58] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-09 13:54:58] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-09 13:54:58] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2018-02-09 13:54:58] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2018-02-09 13:54:58] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ WARN ] [2018-02-09 13:54:58] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-09 13:54:58] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-09 13:54:58] com.netflix.config.DynamicPropertyFactory [281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@645dc557
[ WARN ] [2018-02-09 13:54:59] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-09 13:54:59] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-09 13:55:00] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5ad5be4a: startup date [Fri Feb 09 13:54:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2c35e847
[ INFO ] [2018-02-09 13:55:01] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/bi]}" onto public java.lang.String com.google.style.datasource.TestC.one()
[ INFO ] [2018-02-09 13:55:01] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2018-02-09 13:55:01] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2018-02-09 13:55:01] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-09 13:55:01] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-09 13:55:01] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-09 13:55:04] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-09 13:55:07] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2018-02-09 13:55:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 13:55:11] com.netflix.discovery.DiscoveryClient [861] - Shutting down DiscoveryClient ...
[ INFO ] [2018-02-09 13:55:11] com.netflix.discovery.DiscoveryClient [882] - Completed shut down of DiscoveryClient
[ INFO ] [2018-02-09 13:55:11] org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler [165] - Initializing ExecutorService 
[ WARN ] [2018-02-09 13:55:11] org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration [19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[ INFO ] [2018-02-09 13:55:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2018-02-09 13:55:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2018-02-09 13:55:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2018-02-09 13:55:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2018-02-09 13:55:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2018-02-09 13:55:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2018-02-09 13:55:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2018-02-09 13:55:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2018-02-09 13:55:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2018-02-09 13:55:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5ad5be4a,type=ConfigurationPropertiesRebinder]
[ INFO ] [2018-02-09 13:55:12] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2018-02-09 13:55:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2018-02-09 13:55:12] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 0
[ INFO ] [2018-02-09 13:55:12] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [71] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.DiscoveryClient [347] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.DiscoveryClient [929] - Disable delta property : false
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.DiscoveryClient [930] - Single vip registry refresh property : null
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.DiscoveryClient [931] - Force full registry fetch : false
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.DiscoveryClient [932] - Application is null : false
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.DiscoveryClient [933] - Registered Applications size is zero : true
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.DiscoveryClient [935] - Application version is -1: true
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.DiscoveryClient [1018] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.DiscoveryClient [1027] - The response status is 200
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.DiscoveryClient [1253] - Starting heartbeat executor: renew interval is: 10
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.DiscoveryClient [434] - Discovery Client initialized at timestamp 1518155712809 with initial instances count: 1
[ INFO ] [2018-02-09 13:55:12] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application dao with eureka with status UP
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.DiscoveryClient [1288] - Saw local status change event StatusChangeEvent [timestamp=1518155712853, current=UP, previous=STARTING]
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_DAO/localhost:dao:9090: registering service...
[ INFO ] [2018-02-09 13:55:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2018-02-09 13:55:12] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2018-02-09 13:55:12] com.netflix.discovery.DiscoveryClient [813] - DiscoveryClient_DAO/localhost:dao:9090 - registration status: 204
[ INFO ] [2018-02-09 13:55:13] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2018-02-09 13:55:13] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2018-02-09 13:55:13] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2018-02-09 13:55:13] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2018-02-09 13:55:13] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2018-02-09 13:55:13] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2018-02-09 13:55:13] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2018-02-09 13:55:13] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2018-02-09 13:55:13] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2018-02-09 13:55:13] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2018-02-09 13:55:13] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2018-02-09 13:55:13] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2018-02-09 13:55:13] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 2147483647
[ INFO ] [2018-02-09 13:55:13] o.s.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [138] - Starting poller
[ INFO ] [2018-02-09 13:55:13] org.apache.coyote.http11.Http11NioProtocol [179] - Initializing ProtocolHandler ["http-nio-9090"]
[ INFO ] [2018-02-09 13:55:13] org.apache.coyote.http11.Http11NioProtocol [179] - Starting ProtocolHandler ["http-nio-9090"]
[ INFO ] [2018-02-09 13:55:13] org.apache.tomcat.util.net.NioSelectorPool [179] - Using a shared selector for servlet write/read
[ INFO ] [2018-02-09 13:55:13] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [201] - Tomcat started on port(s): 9090 (http)
[ INFO ] [2018-02-09 13:55:13] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [124] - Updating port to 9090
[ INFO ] [2018-02-09 13:55:13] com.google.style.Application [57] - Started Application in 45.851 seconds (JVM running for 47.48)
[ INFO ] [2018-02-09 14:00:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 14:05:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 14:10:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 14:15:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 14:20:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 14:25:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 14:30:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 14:35:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 14:40:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 14:45:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 14:50:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 14:55:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 15:00:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 15:05:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 15:10:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 15:15:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 16:50:34] org.springframework.context.annotation.AnnotationConfigApplicationContext [583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2c35e847: startup date [Fri Feb 09 16:50:34 CST 2018]; root of context hierarchy
[ INFO ] [2018-02-09 16:50:34] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.6.Final
[ INFO ] [2018-02-09 16:50:35] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-09 16:50:35] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5598ebc3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-09 16:50:37] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-09 16:50:37] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [71] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-09 16:50:37] com.netflix.discovery.DiscoveryClient [347] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-09 16:50:38] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-09 16:50:38] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-09 16:50:38] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-09 16:50:38] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-09 16:50:39] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 16:50:39] com.netflix.discovery.DiscoveryClient [929] - Disable delta property : false
[ INFO ] [2018-02-09 16:50:39] com.netflix.discovery.DiscoveryClient [930] - Single vip registry refresh property : null
[ INFO ] [2018-02-09 16:50:39] com.netflix.discovery.DiscoveryClient [931] - Force full registry fetch : false
[ INFO ] [2018-02-09 16:50:39] com.netflix.discovery.DiscoveryClient [932] - Application is null : false
[ INFO ] [2018-02-09 16:50:39] com.netflix.discovery.DiscoveryClient [933] - Registered Applications size is zero : true
[ INFO ] [2018-02-09 16:50:39] com.netflix.discovery.DiscoveryClient [935] - Application version is -1: true
[ INFO ] [2018-02-09 16:50:39] com.netflix.discovery.DiscoveryClient [1018] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-09 16:50:39] com.netflix.discovery.DiscoveryClient [1027] - The response status is 200
[ INFO ] [2018-02-09 16:50:39] com.netflix.discovery.DiscoveryClient [1300] - Not registering with Eureka server per configuration
[ INFO ] [2018-02-09 16:50:39] com.netflix.discovery.DiscoveryClient [434] - Discovery Client initialized at timestamp 1518166239681 with initial instances count: 1
[ INFO ] [2018-02-09 16:50:41] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [82] - Fetching config from server at: http://192.168.221.1:2005/
[ INFO ] [2018-02-09 16:50:47] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [96] - Located environment: name=model, profiles=[dev], label=master, version=7b48f1e22912b972a6c77619878316b65364a7a2, state=null
[ INFO ] [2018-02-09 16:50:47] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [98] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/passliang/ProjectConfig/styleConfig/model-dev.yml'}]]
[ INFO ] [2018-02-09 16:50:48] com.google.style.Application [597] - The following profiles are active: dev
[ INFO ] [2018-02-09 16:50:48] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77049094: startup date [Fri Feb 09 16:50:48 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2c35e847
[ INFO ] [2018-02-09 16:50:51] org.springframework.cloud.context.scope.GenericScope [287] - BeanFactory id=855b7dfa-9e2f-3471-81f4-6ba3e1bf1ce1
[ INFO ] [2018-02-09 16:50:51] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-09 16:50:51] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$3be42ef8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-09 16:50:52] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-09 16:50:52] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$6bab8f07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-09 16:50:52] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5598ebc3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-09 16:50:52] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$7910c18c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-09 16:50:52] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$216294e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-09 16:50:52] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$$EnhancerBySpringCGLIB$$e611b445] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-09 16:50:53] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 9090 (http)
[ INFO ] [2018-02-09 16:50:53] org.apache.catalina.core.StandardService [179] - Starting service [Tomcat]
[ INFO ] [2018-02-09 16:50:53] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.23
[ INFO ] [2018-02-09 16:50:53] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2018-02-09 16:50:53] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 5365 ms
[ INFO ] [2018-02-09 16:50:54] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2018-02-09 16:50:54] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-09 16:50:54] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'traceFilter' to: [/*]
[ INFO ] [2018-02-09 16:50:54] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-09 16:50:54] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-09 16:50:54] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-09 16:50:54] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2018-02-09 16:50:54] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2018-02-09 16:50:54] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ WARN ] [2018-02-09 16:50:54] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-09 16:50:54] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-09 16:50:54] com.netflix.config.DynamicPropertyFactory [281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@17884d
[ WARN ] [2018-02-09 16:50:55] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-09 16:50:55] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-09 16:50:55] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@77049094: startup date [Fri Feb 09 16:50:48 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2c35e847
[ INFO ] [2018-02-09 16:50:56] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/bi]}" onto public java.lang.String com.google.style.datasource.TestC.one()
[ INFO ] [2018-02-09 16:50:56] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2018-02-09 16:50:56] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2018-02-09 16:50:56] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-09 16:50:56] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-09 16:50:56] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-09 16:50:58] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-09 16:51:00] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-09 16:51:01] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2018-02-09 16:51:02] com.netflix.discovery.DiscoveryClient [861] - Shutting down DiscoveryClient ...
[ INFO ] [2018-02-09 16:51:02] com.netflix.discovery.DiscoveryClient [882] - Completed shut down of DiscoveryClient
[ INFO ] [2018-02-09 16:51:02] org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler [165] - Initializing ExecutorService 
[ WARN ] [2018-02-09 16:51:02] org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration [19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[ INFO ] [2018-02-09 16:51:02] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2018-02-09 16:51:02] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2018-02-09 16:51:02] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2018-02-09 16:51:02] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2018-02-09 16:51:02] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2018-02-09 16:51:02] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2018-02-09 16:51:02] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2018-02-09 16:51:02] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2018-02-09 16:51:03] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2018-02-09 16:51:03] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=77049094,type=ConfigurationPropertiesRebinder]
[ INFO ] [2018-02-09 16:51:03] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2018-02-09 16:51:03] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2018-02-09 16:51:03] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 0
[ INFO ] [2018-02-09 16:51:03] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [71] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.DiscoveryClient [347] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.DiscoveryClient [929] - Disable delta property : false
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.DiscoveryClient [930] - Single vip registry refresh property : null
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.DiscoveryClient [931] - Force full registry fetch : false
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.DiscoveryClient [932] - Application is null : false
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.DiscoveryClient [933] - Registered Applications size is zero : true
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.DiscoveryClient [935] - Application version is -1: true
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.DiscoveryClient [1018] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.DiscoveryClient [1027] - The response status is 200
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.DiscoveryClient [1253] - Starting heartbeat executor: renew interval is: 10
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.DiscoveryClient [434] - Discovery Client initialized at timestamp 1518166263548 with initial instances count: 1
[ INFO ] [2018-02-09 16:51:03] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application dao with eureka with status UP
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.DiscoveryClient [1288] - Saw local status change event StatusChangeEvent [timestamp=1518166263569, current=UP, previous=STARTING]
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_DAO/localhost:dao:9090: registering service...
[ INFO ] [2018-02-09 16:51:03] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2018-02-09 16:51:03] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2018-02-09 16:51:03] com.netflix.discovery.DiscoveryClient [813] - DiscoveryClient_DAO/localhost:dao:9090 - registration status: 204
[ INFO ] [2018-02-09 16:51:03] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2018-02-09 16:51:03] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2018-02-09 16:51:03] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2018-02-09 16:51:03] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2018-02-09 16:51:03] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2018-02-09 16:51:03] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2018-02-09 16:51:03] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2018-02-09 16:51:03] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2018-02-09 16:51:03] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2018-02-09 16:51:03] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2018-02-09 16:51:03] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2018-02-09 16:51:03] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2018-02-09 16:51:03] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 2147483647
[ INFO ] [2018-02-09 16:51:03] o.s.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [138] - Starting poller
[ INFO ] [2018-02-09 16:51:03] org.apache.coyote.http11.Http11NioProtocol [179] - Initializing ProtocolHandler ["http-nio-9090"]
[ INFO ] [2018-02-09 16:51:03] org.apache.coyote.http11.Http11NioProtocol [179] - Starting ProtocolHandler ["http-nio-9090"]
[ INFO ] [2018-02-09 16:51:03] org.apache.tomcat.util.net.NioSelectorPool [179] - Using a shared selector for servlet write/read
[ INFO ] [2018-02-09 16:51:03] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [201] - Tomcat started on port(s): 9090 (http)
[ INFO ] [2018-02-09 16:51:03] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [124] - Updating port to 9090
[ INFO ] [2018-02-09 16:51:04] com.google.style.Application [57] - Started Application in 33.084 seconds (JVM running for 34.376)
[ INFO ] [2018-02-09 16:56:03] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ ERROR] [2018-02-09 17:04:50] org.springframework.boot.SpringApplication [771] - Application startup failed
java.lang.IllegalStateException: Logback configuration error detected: 
ERROR in ch.qos.logback.core.rolling.RollingFileAppender[ERROR-FILE] - 'FileNamePattern' option has the same value "D:/develope/workpace/idea/monkey/logs/dao-%d{yyyy-MM-dd}.%i.log" as that given for appender [INFO-FILE] defined earlier.
ERROR in ch.qos.logback.core.rolling.RollingFileAppender[ERROR-FILE] - Collisions detected with FileAppender/RollingAppender instances defined earlier. Aborting.
ERROR in ch.qos.logback.core.rolling.RollingFileAppender[ERROR-FILE] - For more information, please visit http://logback.qos.ch/codes.html#earlier_fa_collision
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:162)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.reinitialize(LogbackLoggingSystem.java:208)
	at org.springframework.boot.logging.AbstractLoggingSystem.initializeWithConventions(AbstractLoggingSystem.java:74)
	at org.springframework.boot.logging.AbstractLoggingSystem.initialize(AbstractLoggingSystem.java:59)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.initialize(LogbackLoggingSystem.java:115)
	at org.springframework.boot.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:303)
	at org.springframework.boot.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:276)
	at org.springframework.boot.logging.LoggingApplicationListener.onApplicationEnvironmentPreparedEvent(LoggingApplicationListener.java:239)
	at org.springframework.boot.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:212)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:187)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:102)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:68)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.google.style.Application.main(Application.java:22)
[ ERROR] [2018-02-09 17:04:50] org.springframework.boot.SpringApplication [771] - Application startup failed
java.lang.IllegalStateException: Logback configuration error detected: 
ERROR in ch.qos.logback.core.rolling.RollingFileAppender[ERROR-FILE] - 'FileNamePattern' option has the same value "D:/develope/workpace/idea/monkey/logs/dao-%d{yyyy-MM-dd}.%i.log" as that given for appender [INFO-FILE] defined earlier.
ERROR in ch.qos.logback.core.rolling.RollingFileAppender[ERROR-FILE] - Collisions detected with FileAppender/RollingAppender instances defined earlier. Aborting.
ERROR in ch.qos.logback.core.rolling.RollingFileAppender[ERROR-FILE] - For more information, please visit http://logback.qos.ch/codes.html#earlier_fa_collision
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:162)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.reinitialize(LogbackLoggingSystem.java:208)
	at org.springframework.boot.logging.AbstractLoggingSystem.initializeWithConventions(AbstractLoggingSystem.java:74)
	at org.springframework.boot.logging.AbstractLoggingSystem.initialize(AbstractLoggingSystem.java:59)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.initialize(LogbackLoggingSystem.java:115)
	at org.springframework.boot.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:303)
	at org.springframework.boot.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:276)
	at org.springframework.boot.logging.LoggingApplicationListener.onApplicationEnvironmentPreparedEvent(LoggingApplicationListener.java:239)
	at org.springframework.boot.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:212)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:187)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:102)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:68)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:122)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:74)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:296)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.google.style.Application.main(Application.java:22)
