2018-03-21 14:36:46.669 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@69c79f09: startup date [Wed Mar 21 14:36:46 CST 2018]; root of context hierarchy
2018-03-21 14:36:46.570 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.6.Final
2018-03-21 14:36:49.884 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-03-21 14:36:51.900 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$473fa14a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-21 14:36:55.507 [main] INFO  org.springframework.cloud.commons.util.InetUtils [InetUtils.java:171] - Cannot determine local hostname
2018-03-21 14:36:55.758 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
2018-03-21 14:36:56.450 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:347] - Initializing Eureka in region us-east-1
2018-03-21 14:37:00.106 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-03-21 14:37:00.107 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-03-21 14:37:00.631 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-03-21 14:37:00.632 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-03-21 14:37:01.493 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-03-21 14:37:01.911 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:929] - Disable delta property : false
2018-03-21 14:37:01.912 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:930] - Single vip registry refresh property : null
2018-03-21 14:37:01.913 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:931] - Force full registry fetch : false
2018-03-21 14:37:01.914 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:932] - Application is null : false
2018-03-21 14:37:01.914 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:933] - Registered Applications size is zero : true
2018-03-21 14:37:01.915 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:935] - Application version is -1: true
2018-03-21 14:37:01.916 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - Getting all instance registry info from the eureka server
2018-03-21 14:37:02.348 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1027] - The response status is 200
2018-03-21 14:37:02.351 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1300] - Not registering with Eureka server per configuration
2018-03-21 14:37:02.356 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:434] - Discovery Client initialized at timestamp 1521614222356 with initial instances count: 2
2018-03-21 14:37:04.563 [main] INFO  org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [ConfigServicePropertySourceLocator.java:82] - Fetching config from server at: http://192.168.221.1:2005/
2018-03-21 14:37:09.701 [main] INFO  org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [ConfigServicePropertySourceLocator.java:96] - Located environment: name=service, profiles=[dev], label=master, version=b97fd1cb6c3008daf0179df90a99646f480b14d7, state=null
2018-03-21 14:37:09.702 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/passliang/ProjectConfig/styleConfig/service-dev.yml'}]]
2018-03-21 14:37:09.821 [main] INFO  com.google.style.ManageApplication [SpringApplication.java:597] - The following profiles are active: dev
2018-03-21 14:37:09.855 [main] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@19faedcc: startup date [Wed Mar 21 14:37:09 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@69c79f09
2018-03-21 14:37:17.037 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'druidStatViewServlet' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfig; factoryMethodName=druidStatViewServlet; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/google/style/manage/config/DruidConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=druidStatViewServlet; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/google/style/datasource/DruidConfiguration.class]]
2018-03-21 14:37:17.038 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'druidStatFilter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfig; factoryMethodName=druidStatFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/google/style/manage/config/DruidConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=druidStatFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/google/style/datasource/DruidConfiguration.class]]
2018-03-21 14:37:17.989 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-03-21 14:37:18.146 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-03-21 14:37:19.428 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:287] - BeanFactory id=ef8402cd-bcc7-32bc-ad8a-742339ac01be
2018-03-21 14:37:19.503 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-03-21 14:37:20.092 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$2d8ae47f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-21 14:37:20.717 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-21 14:37:20.745 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2b259e4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-21 14:37:20.900 [main] WARN  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:551] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/google/style/manage/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.redis.host' in value "${spring.redis.host}"
2018-03-21 14:37:20.945 [main] INFO  org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer [AutoConfigurationReportLoggingInitializer.java:101] - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-03-21 14:37:20.965 [main] ERROR org.springframework.boot.SpringApplication [SpringApplication.java:771] - Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/google/style/manage/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.redis.host' in value "${spring.redis.host}"
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.google.style.ManageApplication.main(ManageApplication.java:24)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.redis.host' in value "${spring.redis.host}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.redis.host' in value "${spring.redis.host}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:174)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:236)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$2.resolveStringValue(PropertySourcesPlaceholderConfigurer.java:172)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:831)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	... 38 common frames omitted
2018-03-21 14:40:21.957 [main] INFO  org.springframework.context.annotation.AnnotationConfigApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2cab9998: startup date [Wed Mar 21 14:40:21 CST 2018]; root of context hierarchy
2018-03-21 14:40:21.971 [background-preinit] INFO  org.hibernate.validator.internal.util.Version [Version.java:30] - HV000001: Hibernate Validator 5.3.6.Final
2018-03-21 14:40:23.301 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-03-21 14:40:23.595 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$512b94f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-21 14:40:26.881 [main] INFO  org.springframework.cloud.commons.util.InetUtils [InetUtils.java:171] - Cannot determine local hostname
2018-03-21 14:40:27.094 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory [InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
2018-03-21 14:40:27.417 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:347] - Initializing Eureka in region us-east-1
2018-03-21 14:40:28.668 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
2018-03-21 14:40:28.669 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
2018-03-21 14:40:28.998 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
2018-03-21 14:40:28.999 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider [DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
2018-03-21 14:40:30.065 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
2018-03-21 14:40:30.702 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:929] - Disable delta property : false
2018-03-21 14:40:30.703 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:930] - Single vip registry refresh property : null
2018-03-21 14:40:30.705 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:931] - Force full registry fetch : false
2018-03-21 14:40:30.705 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:932] - Application is null : false
2018-03-21 14:40:30.706 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:933] - Registered Applications size is zero : true
2018-03-21 14:40:30.707 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:935] - Application version is -1: true
2018-03-21 14:40:30.708 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1018] - Getting all instance registry info from the eureka server
2018-03-21 14:40:31.235 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1027] - The response status is 200
2018-03-21 14:40:31.239 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:1300] - Not registering with Eureka server per configuration
2018-03-21 14:40:31.248 [main] INFO  com.netflix.discovery.DiscoveryClient [DiscoveryClient.java:434] - Discovery Client initialized at timestamp 1521614431247 with initial instances count: 2
2018-03-21 14:40:33.680 [main] INFO  org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [ConfigServicePropertySourceLocator.java:82] - Fetching config from server at: http://192.168.221.1:2005/
2018-03-21 14:40:37.245 [main] INFO  org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [ConfigServicePropertySourceLocator.java:96] - Located environment: name=service, profiles=[dev], label=master, version=b97fd1cb6c3008daf0179df90a99646f480b14d7, state=null
2018-03-21 14:40:37.245 [main] INFO  org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/passliang/ProjectConfig/styleConfig/service-dev.yml'}]]
2018-03-21 14:40:37.345 [main] INFO  com.google.style.ManageApplication [SpringApplication.java:597] - The following profiles are active: dev
2018-03-21 14:40:37.379 [main] INFO  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@52909a97: startup date [Wed Mar 21 14:40:37 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cab9998
2018-03-21 14:40:47.842 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'druidStatViewServlet' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfig; factoryMethodName=druidStatViewServlet; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/google/style/manage/config/DruidConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=druidStatViewServlet; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/google/style/datasource/DruidConfiguration.class]]
2018-03-21 14:40:47.843 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory [DefaultListableBeanFactory.java:828] - Overriding bean definition for bean 'druidStatFilter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfig; factoryMethodName=druidStatFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/google/style/manage/config/DruidConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=druidConfiguration; factoryMethodName=druidStatFilter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/google/style/datasource/DruidConfiguration.class]]
2018-03-21 14:40:48.861 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-03-21 14:40:49.307 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java:165] - Multiple Spring Data modules found, entering strict repository configuration mode!
2018-03-21 14:40:51.765 [main] INFO  org.springframework.cloud.context.scope.GenericScope [GenericScope.java:287] - BeanFactory id=ef8402cd-bcc7-32bc-ad8a-742339ac01be
2018-03-21 14:40:51.914 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [AutowiredAnnotationBeanPostProcessor.java:155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-03-21 14:40:52.684 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$3776d828] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-21 14:40:53.620 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-21 14:40:53.683 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java:327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$351191f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-03-21 14:40:54.109 [main] WARN  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [AbstractApplicationContext.java:551] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/google/style/manage/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.redis.host' in value "${spring.redis.host}"
2018-03-21 14:40:54.151 [main] INFO  org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer [AutoConfigurationReportLoggingInitializer.java:101] - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-03-21 14:40:54.166 [main] ERROR org.springframework.boot.SpringApplication [SpringApplication.java:771] - Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/google/style/manage/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.redis.host' in value "${spring.redis.host}"
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.google.style.ManageApplication.main(ManageApplication.java:24)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.redis.host' in value "${spring.redis.host}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.redis.host' in value "${spring.redis.host}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:174)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:236)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$2.resolveStringValue(PropertySourcesPlaceholderConfigurer.java:172)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:831)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	... 38 common frames omitted
