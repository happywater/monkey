[ INFO ] [2018-02-08 16:03:06] org.springframework.context.annotation.AnnotationConfigApplicationContext [583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@306e95ec: startup date [Thu Feb 08 16:03:06 CST 2018]; root of context hierarchy
[ INFO ] [2018-02-08 16:03:06] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.6.Final
[ INFO ] [2018-02-08 16:03:07] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-08 16:03:07] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cafca87f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:03:09] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-08 16:03:09] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [71] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-08 16:03:09] com.netflix.discovery.DiscoveryClient [347] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-08 16:03:10] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 16:03:10] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 16:03:10] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-08 16:03:10] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-08 16:03:11] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 16:03:11] com.netflix.discovery.DiscoveryClient [929] - Disable delta property : false
[ INFO ] [2018-02-08 16:03:11] com.netflix.discovery.DiscoveryClient [930] - Single vip registry refresh property : null
[ INFO ] [2018-02-08 16:03:11] com.netflix.discovery.DiscoveryClient [931] - Force full registry fetch : false
[ INFO ] [2018-02-08 16:03:11] com.netflix.discovery.DiscoveryClient [932] - Application is null : false
[ INFO ] [2018-02-08 16:03:11] com.netflix.discovery.DiscoveryClient [933] - Registered Applications size is zero : true
[ INFO ] [2018-02-08 16:03:11] com.netflix.discovery.DiscoveryClient [935] - Application version is -1: true
[ INFO ] [2018-02-08 16:03:11] com.netflix.discovery.DiscoveryClient [1018] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-08 16:03:11] com.netflix.discovery.DiscoveryClient [1027] - The response status is 200
[ INFO ] [2018-02-08 16:03:11] com.netflix.discovery.DiscoveryClient [1300] - Not registering with Eureka server per configuration
[ INFO ] [2018-02-08 16:03:11] com.netflix.discovery.DiscoveryClient [434] - Discovery Client initialized at timestamp 1518076991812 with initial instances count: 1
[ INFO ] [2018-02-08 16:03:13] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [82] - Fetching config from server at: http://192.168.221.1:2005/
[ INFO ] [2018-02-08 16:03:20] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [96] - Located environment: name=model, profiles=[dev], label=master, version=c3d4b49c92702e26f2d86e37a0386b9097beec84, state=null
[ INFO ] [2018-02-08 16:03:20] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [98] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}]]
[ INFO ] [2018-02-08 16:03:20] com.google.style.Application [597] - The following profiles are active: dev
[ INFO ] [2018-02-08 16:03:20] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3af7d855: startup date [Thu Feb 08 16:03:20 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@306e95ec
[ INFO ] [2018-02-08 16:03:23] org.springframework.cloud.context.scope.GenericScope [287] - BeanFactory id=855b7dfa-9e2f-3471-81f4-6ba3e1bf1ce1
[ INFO ] [2018-02-08 16:03:24] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-08 16:03:24] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$b147ebb4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:03:24] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:03:24] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$e10f4bc3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:03:24] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cafca87f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:03:24] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ee747e48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:03:24] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$96c651a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:03:24] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$$EnhancerBySpringCGLIB$$5b757101] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:03:25] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 5003 (http)
[ INFO ] [2018-02-08 16:03:25] org.apache.catalina.core.StandardService [179] - Starting service [Tomcat]
[ INFO ] [2018-02-08 16:03:25] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.23
[ INFO ] [2018-02-08 16:03:25] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2018-02-08 16:03:25] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 5483 ms
[ INFO ] [2018-02-08 16:03:26] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2018-02-08 16:03:26] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-08 16:03:26] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'traceFilter' to: [/*]
[ INFO ] [2018-02-08 16:03:26] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-08 16:03:26] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-08 16:03:26] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-08 16:03:26] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2018-02-08 16:03:26] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2018-02-08 16:03:26] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ WARN ] [2018-02-08 16:03:26] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [551] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'testC': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.datasource.driver-class-name' in value "${spring.datasource.driver-class-name}"
[ INFO ] [2018-02-08 16:03:26] org.apache.catalina.core.StandardService [179] - Stopping service [Tomcat]
[ INFO ] [2018-02-08 16:03:27] org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer [101] - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
[ ERROR] [2018-02-08 16:03:27] org.springframework.boot.SpringApplication [771] - Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'testC': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.datasource.driver-class-name' in value "${spring.datasource.driver-class-name}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.google.style.Application.main(Application.java:22)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.datasource.driver-class-name' in value "${spring.datasource.driver-class-name}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:174)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:236)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$2.resolveStringValue(PropertySourcesPlaceholderConfigurer.java:172)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:831)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	... 17 common frames omitted
[ INFO ] [2018-02-08 16:36:27] org.springframework.context.annotation.AnnotationConfigApplicationContext [583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2c35e847: startup date [Thu Feb 08 16:36:27 CST 2018]; root of context hierarchy
[ INFO ] [2018-02-08 16:36:27] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.6.Final
[ INFO ] [2018-02-08 16:36:28] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-08 16:36:28] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5598ebc3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:36:31] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-08 16:36:31] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [71] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-08 16:36:31] com.netflix.discovery.DiscoveryClient [347] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-08 16:36:33] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 16:36:33] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 16:36:33] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-08 16:36:33] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-08 16:36:33] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 16:36:34] com.netflix.discovery.DiscoveryClient [929] - Disable delta property : false
[ INFO ] [2018-02-08 16:36:34] com.netflix.discovery.DiscoveryClient [930] - Single vip registry refresh property : null
[ INFO ] [2018-02-08 16:36:34] com.netflix.discovery.DiscoveryClient [931] - Force full registry fetch : false
[ INFO ] [2018-02-08 16:36:34] com.netflix.discovery.DiscoveryClient [932] - Application is null : false
[ INFO ] [2018-02-08 16:36:34] com.netflix.discovery.DiscoveryClient [933] - Registered Applications size is zero : true
[ INFO ] [2018-02-08 16:36:34] com.netflix.discovery.DiscoveryClient [935] - Application version is -1: true
[ INFO ] [2018-02-08 16:36:34] com.netflix.discovery.DiscoveryClient [1018] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-08 16:36:34] com.netflix.discovery.DiscoveryClient [1027] - The response status is 200
[ INFO ] [2018-02-08 16:36:34] com.netflix.discovery.DiscoveryClient [1300] - Not registering with Eureka server per configuration
[ INFO ] [2018-02-08 16:36:34] com.netflix.discovery.DiscoveryClient [434] - Discovery Client initialized at timestamp 1518078994709 with initial instances count: 1
[ INFO ] [2018-02-08 16:36:36] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [82] - Fetching config from server at: http://192.168.221.1:2005/
[ INFO ] [2018-02-08 16:36:47] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [96] - Located environment: name=model, profiles=[dev], label=master, version=7b48f1e22912b972a6c77619878316b65364a7a2, state=null
[ INFO ] [2018-02-08 16:36:47] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [98] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/passliang/ProjectConfig/styleConfig/model-dev.yml'}]]
[ INFO ] [2018-02-08 16:36:47] com.google.style.Application [597] - The following profiles are active: dev
[ INFO ] [2018-02-08 16:36:47] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5ad5be4a: startup date [Thu Feb 08 16:36:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2c35e847
[ INFO ] [2018-02-08 16:36:50] org.springframework.cloud.context.scope.GenericScope [287] - BeanFactory id=855b7dfa-9e2f-3471-81f4-6ba3e1bf1ce1
[ INFO ] [2018-02-08 16:36:50] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-08 16:36:51] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$3be42ef8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:36:52] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:36:52] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$6bab8f07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:36:52] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5598ebc3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:36:52] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$7910c18c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:36:52] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$216294e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:36:52] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$$EnhancerBySpringCGLIB$$e611b445] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:36:54] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 9090 (http)
[ INFO ] [2018-02-08 16:36:54] org.apache.catalina.core.StandardService [179] - Starting service [Tomcat]
[ INFO ] [2018-02-08 16:36:54] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.23
[ INFO ] [2018-02-08 16:36:55] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2018-02-08 16:36:55] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 7925 ms
[ INFO ] [2018-02-08 16:36:56] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2018-02-08 16:36:56] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-08 16:36:56] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'traceFilter' to: [/*]
[ INFO ] [2018-02-08 16:36:56] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-08 16:36:56] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-08 16:36:56] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-08 16:36:56] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2018-02-08 16:36:56] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2018-02-08 16:36:56] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ WARN ] [2018-02-08 16:36:56] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-08 16:36:56] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-08 16:36:56] com.netflix.config.DynamicPropertyFactory [281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3b57f915
[ WARN ] [2018-02-08 16:36:57] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-08 16:36:57] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-08 16:36:57] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5ad5be4a: startup date [Thu Feb 08 16:36:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2c35e847
[ INFO ] [2018-02-08 16:36:58] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/bi]}" onto public java.lang.String com.google.style.datasource.TestC.one()
[ INFO ] [2018-02-08 16:36:58] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2018-02-08 16:36:58] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2018-02-08 16:36:58] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-08 16:36:58] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-08 16:36:58] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-08 16:37:00] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-08 16:37:02] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
[ INFO ] [2018-02-08 16:37:03] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 16:37:04] com.netflix.discovery.DiscoveryClient [861] - Shutting down DiscoveryClient ...
[ INFO ] [2018-02-08 16:37:04] com.netflix.discovery.DiscoveryClient [882] - Completed shut down of DiscoveryClient
[ INFO ] [2018-02-08 16:37:05] org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler [165] - Initializing ExecutorService 
[ WARN ] [2018-02-08 16:37:05] org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration [19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[ INFO ] [2018-02-08 16:37:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2018-02-08 16:37:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 16:37:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 16:37:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 16:37:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 16:37:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 16:37:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2018-02-08 16:37:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2018-02-08 16:37:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2018-02-08 16:37:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5ad5be4a,type=ConfigurationPropertiesRebinder]
[ INFO ] [2018-02-08 16:37:05] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2018-02-08 16:37:05] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2018-02-08 16:37:05] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 0
[ INFO ] [2018-02-08 16:37:05] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [71] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.DiscoveryClient [347] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.DiscoveryClient [929] - Disable delta property : false
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.DiscoveryClient [930] - Single vip registry refresh property : null
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.DiscoveryClient [931] - Force full registry fetch : false
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.DiscoveryClient [932] - Application is null : false
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.DiscoveryClient [933] - Registered Applications size is zero : true
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.DiscoveryClient [935] - Application version is -1: true
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.DiscoveryClient [1018] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.DiscoveryClient [1027] - The response status is 200
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.DiscoveryClient [1253] - Starting heartbeat executor: renew interval is: 10
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.DiscoveryClient [434] - Discovery Client initialized at timestamp 1518079025558 with initial instances count: 1
[ INFO ] [2018-02-08 16:37:05] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application dao with eureka with status UP
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.DiscoveryClient [1288] - Saw local status change event StatusChangeEvent [timestamp=1518079025578, current=UP, previous=STARTING]
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_DAO/localhost:dao:9090: registering service...
[ INFO ] [2018-02-08 16:37:05] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2018-02-08 16:37:05] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2018-02-08 16:37:05] com.netflix.discovery.DiscoveryClient [813] - DiscoveryClient_DAO/localhost:dao:9090 - registration status: 204
[ INFO ] [2018-02-08 16:37:05] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2018-02-08 16:37:05] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2018-02-08 16:37:05] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2018-02-08 16:37:05] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2018-02-08 16:37:05] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2018-02-08 16:37:05] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2018-02-08 16:37:05] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2018-02-08 16:37:05] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2018-02-08 16:37:05] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2018-02-08 16:37:05] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2018-02-08 16:37:05] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2018-02-08 16:37:05] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2018-02-08 16:37:05] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 2147483647
[ INFO ] [2018-02-08 16:37:05] o.s.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [138] - Starting poller
[ INFO ] [2018-02-08 16:37:05] org.apache.coyote.http11.Http11NioProtocol [179] - Initializing ProtocolHandler ["http-nio-9090"]
[ INFO ] [2018-02-08 16:37:05] org.apache.coyote.http11.Http11NioProtocol [179] - Starting ProtocolHandler ["http-nio-9090"]
[ INFO ] [2018-02-08 16:37:05] org.apache.tomcat.util.net.NioSelectorPool [179] - Using a shared selector for servlet write/read
[ INFO ] [2018-02-08 16:37:05] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [201] - Tomcat started on port(s): 9090 (http)
[ INFO ] [2018-02-08 16:37:05] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [124] - Updating port to 9090
[ INFO ] [2018-02-08 16:37:05] com.google.style.Application [57] - Started Application in 43.547 seconds (JVM running for 45.117)
[ INFO ] [2018-02-08 16:42:05] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 16:45:22] org.springframework.context.annotation.AnnotationConfigApplicationContext [583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7669ef35: startup date [Thu Feb 08 16:45:22 CST 2018]; root of context hierarchy
[ INFO ] [2018-02-08 16:45:23] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.6.Final
[ INFO ] [2018-02-08 16:45:23] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-08 16:45:23] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d69afaa2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:45:26] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-08 16:45:26] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [71] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-08 16:45:27] com.netflix.discovery.DiscoveryClient [347] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-08 16:45:28] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 16:45:28] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 16:45:28] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-08 16:45:28] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-08 16:45:29] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 16:45:29] com.netflix.discovery.DiscoveryClient [929] - Disable delta property : false
[ INFO ] [2018-02-08 16:45:29] com.netflix.discovery.DiscoveryClient [930] - Single vip registry refresh property : null
[ INFO ] [2018-02-08 16:45:29] com.netflix.discovery.DiscoveryClient [931] - Force full registry fetch : false
[ INFO ] [2018-02-08 16:45:29] com.netflix.discovery.DiscoveryClient [932] - Application is null : false
[ INFO ] [2018-02-08 16:45:29] com.netflix.discovery.DiscoveryClient [933] - Registered Applications size is zero : true
[ INFO ] [2018-02-08 16:45:29] com.netflix.discovery.DiscoveryClient [935] - Application version is -1: true
[ INFO ] [2018-02-08 16:45:29] com.netflix.discovery.DiscoveryClient [1018] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-08 16:45:30] com.netflix.discovery.DiscoveryClient [1027] - The response status is 200
[ INFO ] [2018-02-08 16:45:30] com.netflix.discovery.DiscoveryClient [1300] - Not registering with Eureka server per configuration
[ INFO ] [2018-02-08 16:45:30] com.netflix.discovery.DiscoveryClient [434] - Discovery Client initialized at timestamp 1518079530161 with initial instances count: 2
[ INFO ] [2018-02-08 16:45:32] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [82] - Fetching config from server at: http://192.168.221.1:2005/
[ INFO ] [2018-02-08 16:45:35] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [96] - Located environment: name=App-Service, profiles=[dev], label=master, version=7b48f1e22912b972a6c77619878316b65364a7a2, state=null
[ INFO ] [2018-02-08 16:45:35] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [98] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/passliang/ProjectConfig/styleConfig/App-Service-dev.yml'}]]
[ INFO ] [2018-02-08 16:45:36] com.google.style.AppServiceApplication [597] - The following profiles are active: dev
[ INFO ] [2018-02-08 16:45:36] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7e700bf9: startup date [Thu Feb 08 16:45:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7669ef35
[ INFO ] [2018-02-08 16:45:43] org.springframework.cloud.context.scope.GenericScope [287] - BeanFactory id=1ee0ac7f-e340-3a9f-8020-2d0a397356c0
[ INFO ] [2018-02-08 16:45:43] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-08 16:45:45] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$bce63dd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:45:45] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:45:45] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ecad9de6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:45:45] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d69afaa2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:45:45] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$fa12d06b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:45:45] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$a264a3c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:45:45] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$$EnhancerBySpringCGLIB$$6713c324] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 16:45:47] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 5001 (http)
[ INFO ] [2018-02-08 16:45:47] org.apache.catalina.core.StandardService [179] - Starting service [Tomcat]
[ INFO ] [2018-02-08 16:45:47] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.23
[ INFO ] [2018-02-08 16:45:48] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2018-02-08 16:45:48] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 12231 ms
[ INFO ] [2018-02-08 16:45:51] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2018-02-08 16:45:51] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-08 16:45:51] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'traceFilter' to: [/*]
[ INFO ] [2018-02-08 16:45:51] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-08 16:45:51] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-08 16:45:51] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-08 16:45:51] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2018-02-08 16:45:51] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2018-02-08 16:45:51] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ WARN ] [2018-02-08 16:45:51] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [551] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'testC': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.datasource.driver-class-name' in value "${spring.datasource.driver-class-name}"
[ INFO ] [2018-02-08 16:45:51] org.apache.catalina.core.StandardService [179] - Stopping service [Tomcat]
[ INFO ] [2018-02-08 16:45:52] org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer [101] - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
[ ERROR] [2018-02-08 16:45:52] org.springframework.boot.SpringApplication [771] - Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'testC': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.datasource.driver-class-name' in value "${spring.datasource.driver-class-name}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.google.style.AppServiceApplication.main(AppServiceApplication.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.datasource.driver-class-name' in value "${spring.datasource.driver-class-name}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:174)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:236)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$2.resolveStringValue(PropertySourcesPlaceholderConfigurer.java:172)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:831)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	... 22 common frames omitted
[ INFO ] [2018-02-08 16:47:05] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 16:52:05] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 16:57:05] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:02:05] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:03:14] org.springframework.context.annotation.AnnotationConfigApplicationContext [583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1151e434: startup date [Thu Feb 08 17:03:14 CST 2018]; root of context hierarchy
[ INFO ] [2018-02-08 17:03:15] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.6.Final
[ INFO ] [2018-02-08 17:03:15] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-08 17:03:15] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$aa019acb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:03:17] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-08 17:03:17] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [71] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-08 17:03:17] com.netflix.discovery.DiscoveryClient [347] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-08 17:03:18] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 17:03:18] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 17:03:18] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-08 17:03:18] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-08 17:03:18] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:03:18] com.netflix.discovery.DiscoveryClient [929] - Disable delta property : false
[ INFO ] [2018-02-08 17:03:18] com.netflix.discovery.DiscoveryClient [930] - Single vip registry refresh property : null
[ INFO ] [2018-02-08 17:03:18] com.netflix.discovery.DiscoveryClient [931] - Force full registry fetch : false
[ INFO ] [2018-02-08 17:03:18] com.netflix.discovery.DiscoveryClient [932] - Application is null : false
[ INFO ] [2018-02-08 17:03:18] com.netflix.discovery.DiscoveryClient [933] - Registered Applications size is zero : true
[ INFO ] [2018-02-08 17:03:18] com.netflix.discovery.DiscoveryClient [935] - Application version is -1: true
[ INFO ] [2018-02-08 17:03:18] com.netflix.discovery.DiscoveryClient [1018] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-08 17:03:19] com.netflix.discovery.DiscoveryClient [1027] - The response status is 200
[ INFO ] [2018-02-08 17:03:19] com.netflix.discovery.DiscoveryClient [1300] - Not registering with Eureka server per configuration
[ INFO ] [2018-02-08 17:03:19] com.netflix.discovery.DiscoveryClient [434] - Discovery Client initialized at timestamp 1518080599053 with initial instances count: 2
[ INFO ] [2018-02-08 17:03:20] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [82] - Fetching config from server at: http://192.168.221.1:2005/
[ INFO ] [2018-02-08 17:03:23] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [96] - Located environment: name=model, profiles=[dev], label=master, version=7b48f1e22912b972a6c77619878316b65364a7a2, state=null
[ INFO ] [2018-02-08 17:03:23] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [98] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/passliang/ProjectConfig/styleConfig/model-dev.yml'}]]
[ INFO ] [2018-02-08 17:03:23] com.google.service.ServiceApplication [597] - The following profiles are active: dev
[ INFO ] [2018-02-08 17:03:23] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ad16c5d: startup date [Thu Feb 08 17:03:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1151e434
[ INFO ] [2018-02-08 17:03:25] org.springframework.cloud.context.scope.GenericScope [287] - BeanFactory id=b744745c-153e-38b6-9dd2-10dadb6c3614
[ INFO ] [2018-02-08 17:03:25] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-08 17:03:25] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$904cde00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:03:25] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:03:25] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c0143e0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:03:25] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$aa019acb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:03:25] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$cd797094] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:03:25] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$75cb43ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:03:25] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$$EnhancerBySpringCGLIB$$3a7a634d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:03:26] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 9090 (http)
[ INFO ] [2018-02-08 17:03:26] org.apache.catalina.core.StandardService [179] - Starting service [Tomcat]
[ INFO ] [2018-02-08 17:03:26] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.23
[ INFO ] [2018-02-08 17:03:26] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2018-02-08 17:03:26] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 2915 ms
[ INFO ] [2018-02-08 17:03:27] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2018-02-08 17:03:27] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-08 17:03:27] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'traceFilter' to: [/*]
[ INFO ] [2018-02-08 17:03:27] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-08 17:03:27] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-08 17:03:27] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-08 17:03:27] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2018-02-08 17:03:27] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2018-02-08 17:03:27] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ WARN ] [2018-02-08 17:03:27] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-08 17:03:27] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-08 17:03:27] com.netflix.config.DynamicPropertyFactory [281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7e2c6702
[ WARN ] [2018-02-08 17:03:27] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-08 17:03:27] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-08 17:03:28] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ad16c5d: startup date [Thu Feb 08 17:03:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1151e434
[ INFO ] [2018-02-08 17:03:28] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2018-02-08 17:03:28] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2018-02-08 17:03:28] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-08 17:03:28] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-08 17:03:28] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-08 17:03:30] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-08 17:03:32] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2018-02-08 17:03:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:03:33] com.netflix.discovery.DiscoveryClient [861] - Shutting down DiscoveryClient ...
[ INFO ] [2018-02-08 17:03:33] com.netflix.discovery.DiscoveryClient [882] - Completed shut down of DiscoveryClient
[ INFO ] [2018-02-08 17:03:33] org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler [165] - Initializing ExecutorService 
[ WARN ] [2018-02-08 17:03:33] org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration [19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[ INFO ] [2018-02-08 17:03:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2018-02-08 17:03:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 17:03:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 17:03:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 17:03:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 17:03:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 17:03:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2018-02-08 17:03:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2018-02-08 17:03:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2018-02-08 17:03:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6ad16c5d,type=ConfigurationPropertiesRebinder]
[ INFO ] [2018-02-08 17:03:33] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2018-02-08 17:03:33] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2018-02-08 17:03:34] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 0
[ INFO ] [2018-02-08 17:03:34] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [71] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.DiscoveryClient [347] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.DiscoveryClient [929] - Disable delta property : false
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.DiscoveryClient [930] - Single vip registry refresh property : null
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.DiscoveryClient [931] - Force full registry fetch : false
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.DiscoveryClient [932] - Application is null : false
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.DiscoveryClient [933] - Registered Applications size is zero : true
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.DiscoveryClient [935] - Application version is -1: true
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.DiscoveryClient [1018] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.DiscoveryClient [1027] - The response status is 200
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.DiscoveryClient [1253] - Starting heartbeat executor: renew interval is: 10
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.DiscoveryClient [434] - Discovery Client initialized at timestamp 1518080614143 with initial instances count: 2
[ INFO ] [2018-02-08 17:03:34] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application dao with eureka with status UP
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.DiscoveryClient [1288] - Saw local status change event StatusChangeEvent [timestamp=1518080614155, current=UP, previous=STARTING]
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_DAO/localhost:dao:9090: registering service...
[ INFO ] [2018-02-08 17:03:34] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2018-02-08 17:03:34] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2018-02-08 17:03:34] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2018-02-08 17:03:34] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2018-02-08 17:03:34] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2018-02-08 17:03:34] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2018-02-08 17:03:34] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2018-02-08 17:03:34] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.DiscoveryClient [813] - DiscoveryClient_DAO/localhost:dao:9090 - registration status: 204
[ INFO ] [2018-02-08 17:03:34] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2018-02-08 17:03:34] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2018-02-08 17:03:34] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2018-02-08 17:03:34] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2018-02-08 17:03:34] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2018-02-08 17:03:34] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2018-02-08 17:03:34] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 2147483647
[ INFO ] [2018-02-08 17:03:34] o.s.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [138] - Starting poller
[ INFO ] [2018-02-08 17:03:34] org.apache.coyote.http11.Http11NioProtocol [179] - Initializing ProtocolHandler ["http-nio-9090"]
[ INFO ] [2018-02-08 17:03:34] org.apache.coyote.http11.Http11NioProtocol [179] - Starting ProtocolHandler ["http-nio-9090"]
[ ERROR] [2018-02-08 17:03:34] org.apache.coyote.http11.Http11NioProtocol [181] - Failed to start end point associated with ProtocolHandler ["http-nio-9090"]
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:990)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:635)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1022)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:250)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:193)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.google.service.ServiceApplication.main(ServiceApplication.java:21)
[ ERROR] [2018-02-08 17:03:34] org.apache.catalina.core.StandardService [181] - Failed to start connector [Connector[HTTP/1.1-9090]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-9090]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:250)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:193)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.google.service.ServiceApplication.main(ServiceApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: service.getName(): "Tomcat";  Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1031)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:990)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:635)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1022)
	... 14 common frames omitted
[ INFO ] [2018-02-08 17:03:34] org.apache.coyote.http11.Http11NioProtocol [179] - Pausing ProtocolHandler ["http-nio-9090"]
[ INFO ] [2018-02-08 17:03:34] org.apache.catalina.core.StandardService [179] - Stopping service [Tomcat]
[ INFO ] [2018-02-08 17:03:34] org.apache.catalina.util.LifecycleBase [179] - The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
[ INFO ] [2018-02-08 17:03:34] org.apache.coyote.http11.Http11NioProtocol [179] - Stopping ProtocolHandler ["http-nio-9090"]
[ INFO ] [2018-02-08 17:03:34] org.apache.coyote.http11.Http11NioProtocol [179] - Destroying ProtocolHandler ["http-nio-9090"]
[ INFO ] [2018-02-08 17:03:34] org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer [101] - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
[ ERROR] [2018-02-08 17:03:34] org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [42] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 9090 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 9090, or configure this application to listen on another port.

[ INFO ] [2018-02-08 17:03:34] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ad16c5d: startup date [Thu Feb 08 17:03:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1151e434
[ INFO ] [2018-02-08 17:03:34] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [64] - Unregistering application dao with eureka with status DOWN
[ WARN ] [2018-02-08 17:03:34] com.netflix.discovery.DiscoveryClient [1286] - Saw local status change event StatusChangeEvent [timestamp=1518080614331, current=DOWN, previous=UP]
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_DAO/localhost:dao:9090: registering service...
[ INFO ] [2018-02-08 17:03:34] org.springframework.context.support.DefaultLifecycleProcessor [358] - Stopping beans in phase 2147483647
[ INFO ] [2018-02-08 17:03:34] org.springframework.context.support.DefaultLifecycleProcessor [358] - Stopping beans in phase 0
[ INFO ] [2018-02-08 17:03:34] com.netflix.discovery.DiscoveryClient [813] - DiscoveryClient_DAO/localhost:dao:9090 - registration status: 204
[ INFO ] [2018-02-08 17:03:35] org.springframework.context.annotation.AnnotationConfigApplicationContext [583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@dc96243: startup date [Thu Feb 08 17:03:35 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ad16c5d
[ INFO ] [2018-02-08 17:03:35] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [449] - Unregistering JMX-exposed beans on shutdown
[ INFO ] [2018-02-08 17:03:35] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [241] - Unregistering JMX-exposed beans
[ INFO ] [2018-02-08 17:03:35] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [449] - Unregistering JMX-exposed beans on shutdown
[ INFO ] [2018-02-08 17:03:35] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [241] - Unregistering JMX-exposed beans
[ INFO ] [2018-02-08 17:03:35] com.netflix.discovery.DiscoveryClient [861] - Shutting down DiscoveryClient ...
[ INFO ] [2018-02-08 17:03:35] com.netflix.discovery.DiscoveryClient [893] - Unregistering ...
[ INFO ] [2018-02-08 17:03:35] com.netflix.discovery.DiscoveryClient [895] - DiscoveryClient_DAO/localhost:dao:9090 - deregister  status: 200
[ INFO ] [2018-02-08 17:03:35] com.netflix.discovery.DiscoveryClient [882] - Completed shut down of DiscoveryClient
[ INFO ] [2018-02-08 17:03:35] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-08 17:03:36] com.netflix.discovery.DiscoveryClient [828] - DiscoveryClient_DAO/localhost:dao:9090 - Re-registering apps/DAO
[ INFO ] [2018-02-08 17:03:36] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_DAO/localhost:dao:9090: registering service...
[ INFO ] [2018-02-08 17:03:36] com.netflix.discovery.DiscoveryClient [813] - DiscoveryClient_DAO/localhost:dao:9090 - registration status: 204
[ INFO ] [2018-02-08 17:04:48] org.springframework.context.annotation.AnnotationConfigApplicationContext [583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1151e434: startup date [Thu Feb 08 17:04:48 CST 2018]; root of context hierarchy
[ INFO ] [2018-02-08 17:04:48] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.6.Final
[ INFO ] [2018-02-08 17:04:48] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-08 17:04:48] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$aa019acb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:04:50] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-08 17:04:51] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [71] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-08 17:04:51] com.netflix.discovery.DiscoveryClient [347] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-08 17:04:51] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 17:04:51] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 17:04:51] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-08 17:04:51] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-08 17:04:52] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:04:52] com.netflix.discovery.DiscoveryClient [929] - Disable delta property : false
[ INFO ] [2018-02-08 17:04:52] com.netflix.discovery.DiscoveryClient [930] - Single vip registry refresh property : null
[ INFO ] [2018-02-08 17:04:52] com.netflix.discovery.DiscoveryClient [931] - Force full registry fetch : false
[ INFO ] [2018-02-08 17:04:52] com.netflix.discovery.DiscoveryClient [932] - Application is null : false
[ INFO ] [2018-02-08 17:04:52] com.netflix.discovery.DiscoveryClient [933] - Registered Applications size is zero : true
[ INFO ] [2018-02-08 17:04:52] com.netflix.discovery.DiscoveryClient [935] - Application version is -1: true
[ INFO ] [2018-02-08 17:04:52] com.netflix.discovery.DiscoveryClient [1018] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-08 17:04:52] com.netflix.discovery.DiscoveryClient [1027] - The response status is 200
[ INFO ] [2018-02-08 17:04:52] com.netflix.discovery.DiscoveryClient [1300] - Not registering with Eureka server per configuration
[ INFO ] [2018-02-08 17:04:52] com.netflix.discovery.DiscoveryClient [434] - Discovery Client initialized at timestamp 1518080692806 with initial instances count: 2
[ INFO ] [2018-02-08 17:04:54] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [82] - Fetching config from server at: http://192.168.221.1:2005/
[ INFO ] [2018-02-08 17:04:59] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [96] - Located environment: name=dao, profiles=[dev], label=master, version=7b48f1e22912b972a6c77619878316b65364a7a2, state=null
[ INFO ] [2018-02-08 17:04:59] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [98] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/passliang/ProjectConfig/styleConfig/dao-dev.yml'}]]
[ INFO ] [2018-02-08 17:04:59] com.google.service.ServiceApplication [597] - The following profiles are active: dev
[ INFO ] [2018-02-08 17:04:59] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44cffc25: startup date [Thu Feb 08 17:04:59 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1151e434
[ INFO ] [2018-02-08 17:05:01] org.springframework.cloud.context.scope.GenericScope [287] - BeanFactory id=b744745c-153e-38b6-9dd2-10dadb6c3614
[ INFO ] [2018-02-08 17:05:01] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-08 17:05:01] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$904cde00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:05:02] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:05:02] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$c0143e0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:05:02] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$aa019acb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:05:02] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$cd797094] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:05:02] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$75cb43ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:05:02] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$$EnhancerBySpringCGLIB$$3a7a634d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:05:02] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 9090 (http)
[ INFO ] [2018-02-08 17:05:02] org.apache.catalina.core.StandardService [179] - Starting service [Tomcat]
[ INFO ] [2018-02-08 17:05:02] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.23
[ INFO ] [2018-02-08 17:05:02] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2018-02-08 17:05:02] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 3569 ms
[ INFO ] [2018-02-08 17:05:03] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2018-02-08 17:05:03] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-08 17:05:03] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'traceFilter' to: [/*]
[ INFO ] [2018-02-08 17:05:03] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-08 17:05:03] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-08 17:05:03] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-08 17:05:03] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2018-02-08 17:05:03] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2018-02-08 17:05:03] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ WARN ] [2018-02-08 17:05:03] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-08 17:05:03] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-08 17:05:03] com.netflix.config.DynamicPropertyFactory [281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@675ec28b
[ WARN ] [2018-02-08 17:05:04] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-08 17:05:04] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-08 17:05:04] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44cffc25: startup date [Thu Feb 08 17:04:59 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1151e434
[ INFO ] [2018-02-08 17:05:04] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2018-02-08 17:05:04] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2018-02-08 17:05:04] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-08 17:05:04] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-08 17:05:04] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-08 17:05:06] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-08 17:05:08] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2018-02-08 17:05:09] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [861] - Shutting down DiscoveryClient ...
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [882] - Completed shut down of DiscoveryClient
[ INFO ] [2018-02-08 17:05:10] org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler [165] - Initializing ExecutorService 
[ WARN ] [2018-02-08 17:05:10] org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration [19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[ INFO ] [2018-02-08 17:05:10] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2018-02-08 17:05:10] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 17:05:10] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 17:05:10] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 17:05:10] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 17:05:10] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 17:05:10] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2018-02-08 17:05:10] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2018-02-08 17:05:10] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2018-02-08 17:05:10] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=44cffc25,type=ConfigurationPropertiesRebinder]
[ INFO ] [2018-02-08 17:05:10] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2018-02-08 17:05:10] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2018-02-08 17:05:10] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 0
[ INFO ] [2018-02-08 17:05:10] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [71] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [347] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [929] - Disable delta property : false
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [930] - Single vip registry refresh property : null
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [931] - Force full registry fetch : false
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [932] - Application is null : false
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [933] - Registered Applications size is zero : true
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [935] - Application version is -1: true
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [1018] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [1027] - The response status is 200
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [1253] - Starting heartbeat executor: renew interval is: 30
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [434] - Discovery Client initialized at timestamp 1518080710684 with initial instances count: 2
[ INFO ] [2018-02-08 17:05:10] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application dao with eureka with status UP
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [1288] - Saw local status change event StatusChangeEvent [timestamp=1518080710696, current=UP, previous=STARTING]
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_DAO/localhost:dao:9090: registering service...
[ INFO ] [2018-02-08 17:05:10] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2018-02-08 17:05:10] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2018-02-08 17:05:10] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2018-02-08 17:05:10] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2018-02-08 17:05:10] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2018-02-08 17:05:10] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2018-02-08 17:05:10] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [813] - DiscoveryClient_DAO/localhost:dao:9090 - registration status: 204
[ INFO ] [2018-02-08 17:05:10] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2018-02-08 17:05:10] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2018-02-08 17:05:10] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2018-02-08 17:05:10] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2018-02-08 17:05:10] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2018-02-08 17:05:10] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2018-02-08 17:05:10] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2018-02-08 17:05:10] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 2147483647
[ INFO ] [2018-02-08 17:05:10] o.s.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [138] - Starting poller
[ INFO ] [2018-02-08 17:05:10] org.apache.coyote.http11.Http11NioProtocol [179] - Initializing ProtocolHandler ["http-nio-9090"]
[ INFO ] [2018-02-08 17:05:10] org.apache.coyote.http11.Http11NioProtocol [179] - Starting ProtocolHandler ["http-nio-9090"]
[ ERROR] [2018-02-08 17:05:10] org.apache.coyote.http11.Http11NioProtocol [181] - Failed to start end point associated with ProtocolHandler ["http-nio-9090"]
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:990)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:635)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1022)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:250)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:193)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.google.service.ServiceApplication.main(ServiceApplication.java:21)
[ ERROR] [2018-02-08 17:05:10] org.apache.catalina.core.StandardService [181] - Failed to start connector [Connector[HTTP/1.1-9090]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-9090]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:250)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:193)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.google.service.ServiceApplication.main(ServiceApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: service.getName(): "Tomcat";  Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1031)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:990)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:635)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1022)
	... 14 common frames omitted
[ INFO ] [2018-02-08 17:05:10] org.apache.coyote.http11.Http11NioProtocol [179] - Pausing ProtocolHandler ["http-nio-9090"]
[ INFO ] [2018-02-08 17:05:10] org.apache.catalina.core.StandardService [179] - Stopping service [Tomcat]
[ INFO ] [2018-02-08 17:05:10] org.apache.catalina.util.LifecycleBase [179] - The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
[ INFO ] [2018-02-08 17:05:10] org.apache.coyote.http11.Http11NioProtocol [179] - Stopping ProtocolHandler ["http-nio-9090"]
[ INFO ] [2018-02-08 17:05:10] org.apache.coyote.http11.Http11NioProtocol [179] - Destroying ProtocolHandler ["http-nio-9090"]
[ INFO ] [2018-02-08 17:05:10] org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer [101] - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
[ ERROR] [2018-02-08 17:05:10] org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [42] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 9090 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 9090, or configure this application to listen on another port.

[ INFO ] [2018-02-08 17:05:10] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44cffc25: startup date [Thu Feb 08 17:04:59 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1151e434
[ INFO ] [2018-02-08 17:05:10] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [64] - Unregistering application dao with eureka with status DOWN
[ WARN ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [1286] - Saw local status change event StatusChangeEvent [timestamp=1518080710878, current=DOWN, previous=UP]
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_DAO/localhost:dao:9090: registering service...
[ INFO ] [2018-02-08 17:05:10] org.springframework.context.support.DefaultLifecycleProcessor [358] - Stopping beans in phase 2147483647
[ INFO ] [2018-02-08 17:05:10] org.springframework.context.support.DefaultLifecycleProcessor [358] - Stopping beans in phase 0
[ INFO ] [2018-02-08 17:05:10] com.netflix.discovery.DiscoveryClient [813] - DiscoveryClient_DAO/localhost:dao:9090 - registration status: 204
[ INFO ] [2018-02-08 17:05:11] org.springframework.context.annotation.AnnotationConfigApplicationContext [583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@74b18ada: startup date [Thu Feb 08 17:05:11 CST 2018]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@44cffc25
[ INFO ] [2018-02-08 17:05:11] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-08 17:05:11] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [449] - Unregistering JMX-exposed beans on shutdown
[ INFO ] [2018-02-08 17:05:11] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [241] - Unregistering JMX-exposed beans
[ INFO ] [2018-02-08 17:05:11] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [449] - Unregistering JMX-exposed beans on shutdown
[ INFO ] [2018-02-08 17:05:11] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [241] - Unregistering JMX-exposed beans
[ INFO ] [2018-02-08 17:05:11] com.netflix.discovery.DiscoveryClient [861] - Shutting down DiscoveryClient ...
[ INFO ] [2018-02-08 17:05:11] com.netflix.discovery.DiscoveryClient [893] - Unregistering ...
[ INFO ] [2018-02-08 17:05:11] com.netflix.discovery.DiscoveryClient [895] - DiscoveryClient_DAO/localhost:dao:9090 - deregister  status: 200
[ INFO ] [2018-02-08 17:05:11] com.netflix.discovery.DiscoveryClient [882] - Completed shut down of DiscoveryClient
[ INFO ] [2018-02-08 17:05:16] com.netflix.discovery.DiscoveryClient [828] - DiscoveryClient_DAO/localhost:dao:9090 - Re-registering apps/DAO
[ INFO ] [2018-02-08 17:05:16] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_DAO/localhost:dao:9090: registering service...
[ INFO ] [2018-02-08 17:05:16] com.netflix.discovery.DiscoveryClient [813] - DiscoveryClient_DAO/localhost:dao:9090 - registration status: 204
[ INFO ] [2018-02-08 17:07:05] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:12:05] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:17:05] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:22:05] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:22:25] org.springframework.context.annotation.AnnotationConfigApplicationContext [583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2c35e847: startup date [Thu Feb 08 17:22:25 CST 2018]; root of context hierarchy
[ INFO ] [2018-02-08 17:22:25] org.hibernate.validator.internal.util.Version [30] - HV000001: Hibernate Validator 5.3.6.Final
[ INFO ] [2018-02-08 17:22:26] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-08 17:22:26] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5598ebc3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:22:28] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-08 17:22:28] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [71] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-08 17:22:28] com.netflix.discovery.DiscoveryClient [347] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-08 17:22:29] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 17:22:29] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 17:22:29] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-08 17:22:29] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-08 17:22:30] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:22:30] com.netflix.discovery.DiscoveryClient [929] - Disable delta property : false
[ INFO ] [2018-02-08 17:22:30] com.netflix.discovery.DiscoveryClient [930] - Single vip registry refresh property : null
[ INFO ] [2018-02-08 17:22:30] com.netflix.discovery.DiscoveryClient [931] - Force full registry fetch : false
[ INFO ] [2018-02-08 17:22:30] com.netflix.discovery.DiscoveryClient [932] - Application is null : false
[ INFO ] [2018-02-08 17:22:30] com.netflix.discovery.DiscoveryClient [933] - Registered Applications size is zero : true
[ INFO ] [2018-02-08 17:22:30] com.netflix.discovery.DiscoveryClient [935] - Application version is -1: true
[ INFO ] [2018-02-08 17:22:30] com.netflix.discovery.DiscoveryClient [1018] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-08 17:22:30] com.netflix.discovery.DiscoveryClient [1027] - The response status is 200
[ INFO ] [2018-02-08 17:22:30] com.netflix.discovery.DiscoveryClient [1300] - Not registering with Eureka server per configuration
[ INFO ] [2018-02-08 17:22:30] com.netflix.discovery.DiscoveryClient [434] - Discovery Client initialized at timestamp 1518081750864 with initial instances count: 2
[ INFO ] [2018-02-08 17:22:32] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [82] - Fetching config from server at: http://192.168.221.1:2005/
[ INFO ] [2018-02-08 17:22:36] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator [96] - Located environment: name=model, profiles=[dev], label=master, version=7b48f1e22912b972a6c77619878316b65364a7a2, state=null
[ INFO ] [2018-02-08 17:22:36] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration [98] - Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/passliang/ProjectConfig/styleConfig/model-dev.yml'}]]
[ INFO ] [2018-02-08 17:22:36] com.google.style.Application [597] - The following profiles are active: dev
[ INFO ] [2018-02-08 17:22:36] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext [583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5ad5be4a: startup date [Thu Feb 08 17:22:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2c35e847
[ INFO ] [2018-02-08 17:22:38] org.springframework.cloud.context.scope.GenericScope [287] - BeanFactory id=855b7dfa-9e2f-3471-81f4-6ba3e1bf1ce1
[ INFO ] [2018-02-08 17:22:38] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor [155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2018-02-08 17:22:38] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$3be42ef8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:22:39] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:22:39] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$6bab8f07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:22:39] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5598ebc3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:22:39] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$7910c18c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:22:39] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$216294e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:22:39] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [327] - Bean 'org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.TraceWebClientAutoConfiguration$$EnhancerBySpringCGLIB$$e611b445] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2018-02-08 17:22:41] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [89] - Tomcat initialized with port(s): 9090 (http)
[ INFO ] [2018-02-08 17:22:41] org.apache.catalina.core.StandardService [179] - Starting service [Tomcat]
[ INFO ] [2018-02-08 17:22:41] org.apache.catalina.core.StandardEngine [179] - Starting Servlet Engine: Apache Tomcat/8.5.23
[ INFO ] [2018-02-08 17:22:41] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [179] - Initializing Spring embedded WebApplicationContext
[ INFO ] [2018-02-08 17:22:41] org.springframework.web.context.ContextLoader [276] - Root WebApplicationContext: initialization completed in 5818 ms
[ INFO ] [2018-02-08 17:22:43] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2018-02-08 17:22:43] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2018-02-08 17:22:43] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'traceFilter' to: [/*]
[ INFO ] [2018-02-08 17:22:43] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2018-02-08 17:22:43] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2018-02-08 17:22:43] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2018-02-08 17:22:43] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2018-02-08 17:22:43] org.springframework.boot.web.servlet.FilterRegistrationBean [258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2018-02-08 17:22:43] org.springframework.boot.web.servlet.ServletRegistrationBean [190] - Mapping servlet: 'dispatcherServlet' to [/]
[ WARN ] [2018-02-08 17:22:43] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-08 17:22:43] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-08 17:22:43] com.netflix.config.DynamicPropertyFactory [281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3a3ad8e7
[ WARN ] [2018-02-08 17:22:43] com.netflix.config.sources.URLConfigurationSource [121] - No URLs will be polled as dynamic configuration sources.
[ INFO ] [2018-02-08 17:22:43] com.netflix.config.sources.URLConfigurationSource [122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2018-02-08 17:22:44] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter [534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5ad5be4a: startup date [Thu Feb 08 17:22:36 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2c35e847
[ INFO ] [2018-02-08 17:22:45] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/bi]}" onto public java.lang.String com.google.style.datasource.TestC.one()
[ INFO ] [2018-02-08 17:22:45] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2018-02-08 17:22:45] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping [543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2018-02-08 17:22:45] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-08 17:22:45] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-08 17:22:45] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2018-02-08 17:22:48] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-08 17:22:51] org.springframework.cloud.commons.util.InetUtils [171] - Cannot determine local hostname
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:22:52] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping [543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2018-02-08 17:22:54] com.netflix.discovery.DiscoveryClient [861] - Shutting down DiscoveryClient ...
[ INFO ] [2018-02-08 17:22:54] com.netflix.discovery.DiscoveryClient [882] - Completed shut down of DiscoveryClient
[ INFO ] [2018-02-08 17:22:55] org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler [165] - Initializing ExecutorService 
[ WARN ] [2018-02-08 17:22:55] org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration [19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[ INFO ] [2018-02-08 17:22:55] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2018-02-08 17:22:55] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 17:22:55] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 17:22:55] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 17:22:55] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 17:22:55] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2018-02-08 17:22:55] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2018-02-08 17:22:55] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2018-02-08 17:22:55] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2018-02-08 17:22:55] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5ad5be4a,type=ConfigurationPropertiesRebinder]
[ INFO ] [2018-02-08 17:22:55] org.springframework.jmx.export.annotation.AnnotationMBeanExporter [678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2018-02-08 17:22:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [431] - Registering beans for JMX exposure on startup
[ INFO ] [2018-02-08 17:22:55] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 0
[ INFO ] [2018-02-08 17:22:55] org.springframework.cloud.netflix.eureka.InstanceInfoFactory [71] - Setting initial instance status as: STARTING
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.DiscoveryClient [347] - Initializing Eureka in region us-east-1
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.provider.DiscoveryJerseyProvider [70] - Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.provider.DiscoveryJerseyProvider [71] - Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.provider.DiscoveryJerseyProvider [80] - Using XML encoding codec XStreamXml
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.provider.DiscoveryJerseyProvider [81] - Using XML decoding codec XStreamXml
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.DiscoveryClient [929] - Disable delta property : false
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.DiscoveryClient [930] - Single vip registry refresh property : null
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.DiscoveryClient [931] - Force full registry fetch : false
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.DiscoveryClient [932] - Application is null : false
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.DiscoveryClient [933] - Registered Applications size is zero : true
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.DiscoveryClient [935] - Application version is -1: true
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.DiscoveryClient [1018] - Getting all instance registry info from the eureka server
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.DiscoveryClient [1027] - The response status is 200
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.DiscoveryClient [1253] - Starting heartbeat executor: renew interval is: 10
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.InstanceInfoReplicator [59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.DiscoveryClient [434] - Discovery Client initialized at timestamp 1518081775888 with initial instances count: 2
[ INFO ] [2018-02-08 17:22:55] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [40] - Registering application dao with eureka with status UP
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.DiscoveryClient [1288] - Saw local status change event StatusChangeEvent [timestamp=1518081775901, current=UP, previous=STARTING]
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.DiscoveryClient [804] - DiscoveryClient_DAO/localhost:dao:9090: registering service...
[ INFO ] [2018-02-08 17:22:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2018-02-08 17:22:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2018-02-08 17:22:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2018-02-08 17:22:55] com.netflix.discovery.DiscoveryClient [813] - DiscoveryClient_DAO/localhost:dao:9090 - registration status: 204
[ INFO ] [2018-02-08 17:22:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2018-02-08 17:22:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2018-02-08 17:22:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2018-02-08 17:22:55] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2018-02-08 17:22:56] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2018-02-08 17:22:56] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2018-02-08 17:22:56] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2018-02-08 17:22:56] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2018-02-08 17:22:56] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2018-02-08 17:22:56] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2018-02-08 17:22:56] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter [678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2018-02-08 17:22:56] org.springframework.context.support.DefaultLifecycleProcessor [343] - Starting beans in phase 2147483647
[ INFO ] [2018-02-08 17:22:56] o.s.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration [138] - Starting poller
[ INFO ] [2018-02-08 17:22:56] org.apache.coyote.http11.Http11NioProtocol [179] - Initializing ProtocolHandler ["http-nio-9090"]
[ INFO ] [2018-02-08 17:22:56] org.apache.coyote.http11.Http11NioProtocol [179] - Starting ProtocolHandler ["http-nio-9090"]
[ INFO ] [2018-02-08 17:22:56] org.apache.tomcat.util.net.NioSelectorPool [179] - Using a shared selector for servlet write/read
[ INFO ] [2018-02-08 17:22:56] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer [201] - Tomcat started on port(s): 9090 (http)
[ INFO ] [2018-02-08 17:22:56] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [124] - Updating port to 9090
[ INFO ] [2018-02-08 17:22:56] com.google.style.Application [57] - Started Application in 34.51 seconds (JVM running for 35.887)
[ INFO ] [2018-02-08 17:27:55] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:32:55] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:37:55] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:42:55] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:47:55] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:52:55] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 17:57:55] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 18:02:55] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 18:07:55] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 18:12:55] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 18:17:55] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 18:22:55] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 18:27:55] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 18:32:55] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 18:37:55] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
[ INFO ] [2018-02-08 18:42:55] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [43] - Resolving eureka endpoints via configuration
